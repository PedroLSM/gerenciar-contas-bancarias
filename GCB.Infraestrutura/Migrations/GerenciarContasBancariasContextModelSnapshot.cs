// <auto-generated />
using System;
using GCB.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GCB.Infraestrutura.Migrations
{
    [DbContext(typeof(GerenciarContasBancariasContext))]
    partial class GerenciarContasBancariasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GCB.Dominio.Entidades.ContaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContasBancarias", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.DepositoBancario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ExtratoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExtratoId");

                    b.ToTable("DepositosBancarios", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Emprestimo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emprestimos", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.EmprestimoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmprestimoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("EmprestimoPagamentos", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Extrato", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("ReferenciaId");

                    b.ToTable("Extratos", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Referencia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasMaxLength(30)
                        .HasColumnType("int")
                        .HasColumnName("AnoReferencia");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MesReferencia");

                    b.HasKey("Id");

                    b.HasAlternateKey("Ano", "Mes");

                    b.ToTable("Referencias", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.RetiradaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ExtratoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExtratoId");

                    b.ToTable("RetiradasBancarias", (string)null);
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.ContaBancaria", b =>
                {
                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "SaldoAtual", b1 =>
                        {
                            b1.Property<Guid>("ContaBancariaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("SaldoAtual");

                            b1.HasKey("ContaBancariaId");

                            b1.ToTable("ContasBancarias");

                            b1.WithOwner()
                                .HasForeignKey("ContaBancariaId");
                        });

                    b.Navigation("SaldoAtual");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.DepositoBancario", b =>
                {
                    b.HasOne("GCB.Dominio.Entidades.Extrato", null)
                        .WithMany("DepositosBancarios")
                        .HasForeignKey("ExtratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "Valor", b1 =>
                        {
                            b1.Property<Guid>("DepositoBancarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorDepositado");

                            b1.HasKey("DepositoBancarioId");

                            b1.ToTable("DepositosBancarios");

                            b1.WithOwner()
                                .HasForeignKey("DepositoBancarioId");
                        });

                    b.Navigation("Valor");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Emprestimo", b =>
                {
                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "ValorEmprestimo", b1 =>
                        {
                            b1.Property<Guid>("EmprestimoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorEmprestimo");

                            b1.HasKey("EmprestimoId");

                            b1.ToTable("Emprestimos");

                            b1.WithOwner()
                                .HasForeignKey("EmprestimoId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "ValorPago", b1 =>
                        {
                            b1.Property<Guid>("EmprestimoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorPago");

                            b1.HasKey("EmprestimoId");

                            b1.ToTable("Emprestimos");

                            b1.WithOwner()
                                .HasForeignKey("EmprestimoId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "ValorPrevisto", b1 =>
                        {
                            b1.Property<Guid>("EmprestimoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorPrevisto");

                            b1.HasKey("EmprestimoId");

                            b1.ToTable("Emprestimos");

                            b1.WithOwner()
                                .HasForeignKey("EmprestimoId");
                        });

                    b.Navigation("ValorEmprestimo");

                    b.Navigation("ValorPago");

                    b.Navigation("ValorPrevisto");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.EmprestimoPagamento", b =>
                {
                    b.HasOne("GCB.Dominio.Entidades.Emprestimo", null)
                        .WithMany("Pagamentos")
                        .HasForeignKey("EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "ValorPago", b1 =>
                        {
                            b1.Property<Guid>("EmprestimoPagamentoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorPago");

                            b1.HasKey("EmprestimoPagamentoId");

                            b1.ToTable("EmprestimoPagamentos");

                            b1.WithOwner()
                                .HasForeignKey("EmprestimoPagamentoId");
                        });

                    b.Navigation("ValorPago");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Extrato", b =>
                {
                    b.HasOne("GCB.Dominio.Entidades.ContaBancaria", null)
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GCB.Dominio.Entidades.Referencia", null)
                        .WithMany()
                        .HasForeignKey("ReferenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "Saldo", b1 =>
                        {
                            b1.Property<Guid>("ExtratoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Saldo");

                            b1.HasKey("ExtratoId");

                            b1.ToTable("Extratos");

                            b1.WithOwner()
                                .HasForeignKey("ExtratoId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "TotalDepositado", b1 =>
                        {
                            b1.Property<Guid>("ExtratoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("TotalDepositado");

                            b1.HasKey("ExtratoId");

                            b1.ToTable("Extratos");

                            b1.WithOwner()
                                .HasForeignKey("ExtratoId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "TotalRetirado", b1 =>
                        {
                            b1.Property<Guid>("ExtratoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("TotalRetirado");

                            b1.HasKey("ExtratoId");

                            b1.ToTable("Extratos");

                            b1.WithOwner()
                                .HasForeignKey("ExtratoId");
                        });

                    b.Navigation("Saldo");

                    b.Navigation("TotalDepositado");

                    b.Navigation("TotalRetirado");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Referencia", b =>
                {
                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "DiferencaSaldoAnterior", b1 =>
                        {
                            b1.Property<Guid>("ReferenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("DiferencaSaldoAnterior");

                            b1.HasKey("ReferenciaId");

                            b1.ToTable("Referencias");

                            b1.WithOwner()
                                .HasForeignKey("ReferenciaId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "Saldo", b1 =>
                        {
                            b1.Property<Guid>("ReferenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Saldo");

                            b1.HasKey("ReferenciaId");

                            b1.ToTable("Referencias");

                            b1.WithOwner()
                                .HasForeignKey("ReferenciaId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "TotalDepositado", b1 =>
                        {
                            b1.Property<Guid>("ReferenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("TotalDepositado");

                            b1.HasKey("ReferenciaId");

                            b1.ToTable("Referencias");

                            b1.WithOwner()
                                .HasForeignKey("ReferenciaId");
                        });

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "TotalRetirado", b1 =>
                        {
                            b1.Property<Guid>("ReferenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("TotalRetirado");

                            b1.HasKey("ReferenciaId");

                            b1.ToTable("Referencias");

                            b1.WithOwner()
                                .HasForeignKey("ReferenciaId");
                        });

                    b.Navigation("DiferencaSaldoAnterior");

                    b.Navigation("Saldo");

                    b.Navigation("TotalDepositado");

                    b.Navigation("TotalRetirado");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.RetiradaBancaria", b =>
                {
                    b.HasOne("GCB.Dominio.Entidades.Extrato", null)
                        .WithMany("RetiradasBancarias")
                        .HasForeignKey("ExtratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GCB.Dominio.ObjetosValor.Real", "Valor", b1 =>
                        {
                            b1.Property<Guid>("RetiradaBancariaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorRetirado");

                            b1.HasKey("RetiradaBancariaId");

                            b1.ToTable("RetiradasBancarias");

                            b1.WithOwner()
                                .HasForeignKey("RetiradaBancariaId");
                        });

                    b.Navigation("Valor");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Emprestimo", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("GCB.Dominio.Entidades.Extrato", b =>
                {
                    b.Navigation("DepositosBancarios");

                    b.Navigation("RetiradasBancarias");
                });
#pragma warning restore 612, 618
        }
    }
}
